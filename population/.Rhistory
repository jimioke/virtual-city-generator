N <- 450
sig2 <- var(y)
ybar <- mean(y)
sigma2.sim <- rinvchisq(1000,n-1,sig2)
mu.sim <- rnorm(1000, ybar,sqrt(sigma2.sim/n))
ybar.mis.sim <- rnorm(1000, mu.sim, sqrt(sigma2.sim/(N-n)))
ybar.sim <- n*ybar/N+(N-n)*mis.sim/N
quantile(ybar.sim, probs = c(0.025, 0.975))
?libXft
library(libXft)
library(LaplacesDemon)
install.packages(LaplacesDemon)
install.packages("LaplacesDemon")
library(LaplacesDemon)
library(LaplacesDemon)
y.obs <- c(80, 76, 83, 78, 81, 77, 81, 83, 82, 84, 87, 74, 75, 80, 79,
79, 80, 78, 76, 77, 84, 78, 79, 76, 79, 75, 84, 78, 81, 76)
ny <- length(y)
N <- 450
sig2 <- var(y)
ybar <- mean(y)
sigma2.sim <- rinvchisq(1000,n-1,sig2)
mu.sim <- rnorm(1000, ybar,sqrt(sigma2.sim/n))
ybar.mis.sim <- rnorm(1000, mu.sim, sqrt(sigma2.sim/(N-n)))
ybar.sim <- n*ybar/N+(N-n)*mis.sim/N
quantile(ybar.sim, probs = c(0.025, 0.975))
library(LaplacesDemon)
y.obs <- c(80, 76, 83, 78, 81, 77, 81, 83, 82, 84, 87, 74, 75, 80, 79,
79, 80, 78, 76, 77, 84, 78, 79, 76, 79, 75, 84, 78, 81, 76)
ny <- length(y)
N <- 450
sig2 <- var(y)
ybar <- mean(y)
sigma2.sim <- rinvchisq(1000,n-1,sig2)
mu.sim <- rnorm(1000, ybar,sqrt(sigma2.sim/n))
ybar.mis.sim <- rnorm(1000, mu.sim, sqrt(sigma2.sim/(N-n)))
ybar.sim <- n*ybar/N+(N-n)*ybar.mis.sim/N
quantile(ybar.sim, probs = c(0.025, 0.975))
library(LaplacesDemon)
y.obs <- c(80, 76, 83, 78, 81, 77, 81, 83, 82, 84, 87, 74, 75, 80, 79,
79, 80, 78, 76, 77, 84, 78, 79, 76, 79, 75, 84, 78, 81, 76)
ny <- length(y)
N <- 450
sig2 <- var(y)
ybar <- mean(y)
sigma2.sim <- rinvchisq(1000,ny-1,sig2)
mu.sim <- rnorm(1000, ybar,sqrt(sigma2.sim/ny))
ybar.mis.sim <- rnorm(1000, mu.sim, sqrt(sigma2.sim/(N-ny)))
ybar.sim <- ny*ybar/N+(N-ny)*ybar.mis.sim/N
quantile(ybar.sim, probs = c(0.025, 0.975))
library(LaplacesDemon)
y.obs <- c(80, 76, 83, 78, 81, 77, 81, 83, 82, 84, 87, 74, 75, 80, 79,
79, 80, 78, 76, 77, 84, 78, 79, 76, 79, 75, 84, 78, 81, 76)
ny <- length(y)
N <- 450
sig2 <- var(y)
ybar <- mean(y)
sigma2.sim <- rinvchisq(1000,ny-1,sig2)
mu.sim <- rnorm(1000, ybar,sqrt(sigma2.sim/ny))
ybar.mis.sim <- rnorm(1000, mu.sim, sqrt(sigma2.sim/(N-ny)))
ybar.sim <- ny*ybar/N+(N-ny)*ybar.mis.sim/N
quantile(ybar.sim, probs = c(0.025, 0.975))
install.packages("geoR")
library(geoR)
rinvchisq <- function(n,df, scale){
return((df*scale)/rchisq(n,df = df))
}
y.obs <- c(80, 76, 83, 78, 81, 77, 81, 83, 82, 84, 87, 74, 75, 80, 79,
79, 80, 78, 76, 77, 84, 78, 79, 76, 79, 75, 84, 78, 81, 76)
ny <- length(y)
N <- 450
sig2 <- var(y)
ybar <- mean(y)
sigma2.sim <- rinvchisq(1000,ny-1,sig2)
mu.sim <- rnorm(1000, ybar,sqrt(sigma2.sim/ny))
ybar.mis.sim <- rnorm(1000, mu.sim, sqrt(sigma2.sim/(N-ny)))
ybar.sim <- ny*ybar/N+(N-ny)*ybar.mis.sim/N
quantile(ybar.sim, probs = c(0.025, 0.975))
ybar
rinvchisq <- function(n,df, scale){
return((df*scale)/rchisq(n,df = df))
}
y.obs <- c(80, 76, 83, 78, 81, 77, 81, 83, 82, 84, 87, 74, 75, 80, 79,
79, 80, 78, 76, 77, 84, 78, 79, 76, 79, 75, 84, 78, 81, 76)
ny <- length(y.obs)
N <- 450
sig2 <- var(y.obs)
ybar <- mean(y.obs)
sigma2.sim <- rinvchisq(1000,ny-1,sig2)
mu.sim <- rnorm(1000, ybar,sqrt(sigma2.sim/ny))
ybar.mis.sim <- rnorm(1000, mu.sim, sqrt(sigma2.sim/(N-ny)))
ybar.sim <- ny*ybar/N+(N-ny)*ybar.mis.sim/N
quantile(ybar.sim, probs = c(0.025, 0.975))
0:10
data <- c(28,4,3,4,4,2,1,0,2,1,1)
N <- 807
n < -50
y <- c(0:10)
y.sum.sim<-rep(NA,1000)
for (i in 1:1000){
theta.sim<-rgamma(1,sum(data*y),n)
y.sim<-rpois(N-n,theta.sim)
y.sum.sim[i]<-sum(y.sim)+sum(data*y)
}
quantile(y.sum.sim,c(0.025,0.975))
0:10
c(0:10)
data <- c(28,4,3,4,4,2,1,0,2,1,1)
N <- 807
n <- 50
y <- c(0:10)
y.sum.sim <- rep(NA,1000)
for (i in 1:1000){
theta.sim<-rgamma(1,sum(data*y),n)
y.sim<-rpois(N-n,theta.sim)
y.sum.sim[i]<-sum(y.sim)+sum(data*y)
}
quantile(y.sum.sim,c(0.025,0.975))
data <- c(28,4,3,4,4,2,1,0,2,1,1)
N <- 807
n <- 50
y <- c(0:10)
y.sum.sim <- rep(NA,1000)
for (i in 1:1000){
theta.sim<-rgamma(1,sum(data*y),n)
y.sim<-rpois(N-n,theta.sim)
y.sum.sim[i]<-sum(y.sim)+sum(data*y)
}
quantile(y.sum.sim,c(0.025,0.975))
data <- c(28,4,3,4,4,2,1,0,2,1,1)
N <- 807
n <- 50
y <- c(0:10)
y.sum.sim <- rep(NA,1000)
for (i in 1:1000){
theta.sim<-rgamma(1,sum(data*y),n)
y.sim<-rpois(N-n,theta.sim)
y.sum.sim[i]<-sum(y.sim)+sum(data*y)
}
quantile(y.sum.sim,c(0.025,0.975))
data <- c(28,4,3,4,4,2,1,0,2,1,1)
N <- 807
n <- 50
y <- c(0:10)
y.sum.sim <- rep(NA,1000)
for (i in 1:1000){
theta.sim<-rgamma(1,sum(data*y),n)
y.sim<-rpois(N-n,theta.sim)
y.sum.sim[i]<-sum(y.sim)+sum(data*y)
}
quantile(y.sum.sim,c(0.025,0.975))
data <- c(28,4,3,4,4,2,1,0,2,1,1)
N <- 807
n <- 50
y <- c(0:10)
y.sum.sim <- rep(NA,1000)
for (i in 1:1000){
theta.sim<-rgamma(1,sum(data*y),n)
y.sim<-rpois(N-n,theta.sim)
y.sum.sim[i]<-sum(y.sim)+sum(data*y)
}
quantile(y.sum.sim,c(0.025,0.975))
sample1 <- structure(c(6L, 14L, 46L, 16L, 6L, 21L, 62L, 169L, 327L, 174L,
44L, 72L, 43L, 100L, 186L, 72L, 23L, 42L), .Dim = c(6L, 3L), .Dimnames = list(
c("Primary", "Lowersec", "Highersec", "Highershort", "Higherlong",
"University"), c("B", "F", "W")))
sample1
sample2 <- structure(c(171796L, 168191L, 240671L, 69168L, 60079L, 168169L,
954045L, 1040981L, 1872732L, 726410L, 207366L, 425786L, 596239L,
604826L, 991640L, 323215L, 134066L, 221696L), .Dim = c(6L, 3L
), .Dimnames = list(c("Primary", "Lowerse", "Highersec", "Highershort",
"Higherlong", "University"), c("B", "F", "W")))
sample2
library(MplusAutomation)
setwd('~/GitHub/mplus/')
mydata <- read.csv('330_merge_scale.csv')
colnames(mydata)
for (i in 1:ncol(mydata)){
if (grepl('q',colnames(mydata)[i])){
colnames(mydata)[i] <- gsub('q','q_',colnames(mydata)[i])
if (nchar(colnames(mydata)[i])>4){
colnames(mydata)[i] <- paste(substring(colnames(mydata)[i], c(1,5), c(4,6)), collapse="_")
}
}
}
prepareMplusData(mydata,'330_merge_scale_corrected.dat',dropCols = c('cit'))
grepl('q[:digit:]', 'q01')
grepl('q[[:digit:]', 'q01')
grepl('q[[:digit:]]', 'q01')
grepl('q[[:digit:]]', 'qual')
mydata <- read.csv('330_merge_scale.csv')
for (i in 1:ncol(mydata)){
if (grepl('q[[:digit:]]',colnames(mydata)[i])){
colnames(mydata)[i] <- gsub('q','q_',colnames(mydata)[i])
if (nchar(colnames(mydata)[i])>4){
colnames(mydata)[i] <- paste(substring(colnames(mydata)[i], c(1,5), c(4,6)), collapse="_")
}
}
}
colnames(mydata)
grepl('q[[:digit:]]', 'qua10l')
prepareMplusData(mydata,'330_merge_scale_corrected.dat',dropCols = c('cit'))
aaaa <- 'aff_ind_nmo air_pol_unh and_avg_osm awnd_avg_osm mod_bik bks_bic_phk
bks_sta_phk brt_ann_dem_pc brt_flt_size_phk brt_sta_phk brt_sys_len_den
brt_ann_dem brt_fare brt_fleet_size brt_sta brt_sys_len_km mod_car cir_avg_osm
clim_ind_nmo cc_avg_osm cc_wavg_osm co2_ind_nmo co2_epc_unh_wik con_lev_tom cdd
cos_liv_ind_nmo cou_inter_osm crim_ind_nmo deg_cen_avg_osm dig_acc_ind_iws
edg_len_avg_osm edg_len_tot_osm elev_m ene_pc_uitp con_pmp_tom gas_pri_gpp
gdp_pc_gci_wik_odn gini_coef_unh groc_ind_nmo hc_ind_nmo hdd con_hw_tom
ineff_ind_nmo inf_mor_gci innov_sco_ici web_pen_iws deg_avg_osm are_dem lat
lev_urb_unh lif_exp_gci_wik lpp_ind_nmo lon edg_osm met_ann_dem_pc met_rid
met_sta_phk met_sta met_sys_len_den met_sys_len con_amp_tom mv_pc nod_osm
con_nhw_tom bks_bik bks_sta pgr_max_osm pgr_max_nod_osm pgr_min_osm
pgr_min_nod_osm pop_slum_unh pol_ind_nmo pop_2016_dem pop_den_dem
pov_rat_gci_unh pri_inc_rat_2016_nmo mod_pt qua_lif_ind_nmo ren_ind_nmo
res_pri_ind_nmo roa_tra_dea_who saf_ind_nmo slp_osm sma_pho_pen_pew
str_len_avg_osm str_len_den_osm str_len_tot_osm str_seg_cou_osm
str_per_nod_avg_osm traf_ind_nmo traf_tim_ind_nmo unemp_rat_unh_gci mod_ped
bks_age met_age int_den_osm edu empA empB empC empD empE empF empG empH empI
ess inc q_01_A q_01_B q_01_C q_01_D q_01_E q_01_F q_01_G q_01_H q_01_I q_01_J
q_01_K q_01_L q_01_M q_01_N q_01_O q_02 q_03_A q_03_B q_03_C q_03_D q_03_E
q_04_A q_04_B q_04_C q_04_D q_04_E q_04_F q_04_G q_04_H q_04_I q_04_J q_04_K
q_05 q_06_A q_06_B q_06_C q_06_D q_07 q_08 q_09 q_10 q_11_A q_11_B q_11_C
q_11_D q_11_E q_11_F q_11_G q_11_H q_11_I q_11_J q_11_K q_11_M q_11_N q_13
q_14_A q_14_B q_14_C q_14_D q_14_E q_14_F q_14_G q_14_H q_14_I q_14_J q_14_K
q_14_L q_15_A q_15_B q_15_C q_15_D q_15_E q_15_F q_16 q_17 q_18 age'
?substring
?splitstring
?splitstr
?strsplit
bbb <- 'bks_bic_phk (b)
bks_sta_phk (b)
brt_ann_dem_pc (b)
brt_flt_size_phk (b)
brt_sta_phk (b)
brt_sys_len_den (b)
brt_ann_dem (b)
brt_fare (b)
brt_fleet_size (b)
brt_sta (b)
brt_sys_len_km (b)
met_ann_dem_pc (b)
met_rid (b)
met_sta_phk (b)
met_sta (b)
met_sys_len_den (b)
met_sys_len (b)
bks_bik (b)
bks_sta (b)
bks_age (b)
met_age (b)'
strsplit(bbb,' ')
ccc <- strsplit(bbb,' ')
ccc
strplit(ccc[2],'\\\')
strsplit(ccc[2],'\\\')
strsplit(ccc[2],'\\\\')
ccc[2]
ccc[[1]][2]
strsplit(ccc[[1]][2],'\\\\')
strsplit(ccc[[1]][2],'\\\')
strsplit(ccc[[1]][2],'[\]')
strsplit(ccc[[1]][2],'[[\]')
strsplit(ccc[[1]][2],'[[\]]')
length(ccc[[1]])
?substr
substr(ccc[[1]][2],5,length(ccc[[1]][2]))
length(ccc[[1]][2])
substr(ccc[[1]][2],5,nchar(ccc[[1]][2]))
ddd <- ccc[[1]][1]
for (i in 2:length(ccc[[1]])){
ddd <- cbind(ddd, substr(ccc[[1]][i],5,nchar(ccc[[1]][i])))
}
ddd
ccc
ddd <- c(ccc[[1]][1])
for (i in 2:length(ccc[[1]])){
ddd <- cbind(ddd, substr(ccc[[1]][i],5,nchar(ccc[[1]][i])))
}
ddd
ddd[1]
ddd[2]
length(ddd)
?grepl
for (i in 1:21){
cat(grepl(ddd[i],aaaa),'\n')
}
datfile <- read.table('330_merge_scale_corrected.dat')
datfile[,1]
mydata[,1]
mydata[,2]
datfile[,1] == mydata[,2]
sum(datfile[,1] == mydata[,2])
sum(datfile[,1] == mydata[,2],na.rm=T)
mydata <- read.csv('330_merge_scale.csv')
mydata <- mydata[,!names(mydata) %in% c('inc','ess','edu','age',q12s)]
prepareMplusData(mydata,'330_merge_scale_corrected.dat',dropCols = c('cit'))
mydata <- read.csv('330_merge_scale.csv')
mydata <- mydata[,!names(mydata) %in% c('inc','ess','age',q12s)]
mydata <- mydata[,!names(mydata) %in% c('inc','ess','age')]
prepareMplusData(mydata,'330_merge_scale_corrected.dat',dropCols = c('cit'))
mydata <- read.csv('330_merge_scale.csv')
mydata <- mydata[,!names(mydata) %in% c('inc','ess','age','empA')]
prepareMplusData(mydata,'330_merge_scale_corrected.dat',dropCols = c('cit'))
setwd('~/Downloads/ICPSR_21741/DS0001')
mydata <- read.table('21741-0001-Data.tsv')
mydata <- read.table('21741-0001-Data.tsv',header = T,sep='\t')
mydata <- read.table('21741-0001-Data.tsv',header = T,sep='\t')
dim(mydata)
colnames(mydata)
?count
count(mydata,city)
library(plyr)
count(mydata,city)
count(mydata,'city')
count(mydata,'p105')
count(mydata,'p106')
plot(count(mydata,"p106"))
plot(count(mydata,"p106"),'.')
?plot
plot(count(mydata,"p106"),type='p')
plot(count(mydata,"p106"),type='p',cex=0.5)
install.packages('bnlearn')
setwd('~/GitHub/behavioral-data/output/')
dalia <- read.csc('globalMobility.csv')
dalia <- read.csv('globalMobility.csv')
count(dalia,'city')
count(dalia,'cit')
histogram(count(dalia,'cit'))
hist(count(dalia,'cit'))
table(c(11,1,1,1,1,1,2,2,2,2,2,3,3,3,4,4,4))
table(count(dalia,'cit')[,2])
cit.count <- count(dalia,'cit')
where(cit.count[,2]==5067)
?where
which(cit.count[,2]==5067)
?which
install.packages('simPop')
hhdata <- read.table('data/21741-0002-Data.tsv', header=T, set='\t')
hhdata <- read.table('data/21741-0002-Data.tsv', header=T, sep='\t')
getwd()
setwd('~/GitHub/procedural_city_generation/')
hhdata <- read.table('data/21741-0002-Data.tsv', header=T, sep='\t')
setwd('~/GitHub/procedural_city_generation/Network/')
hhdata <- read.table('data/21741-0002-Data.tsv', header=T, sep='\t')
dim(hhdata)
colnames(hhdata)
dim(mydata)
dim(hhdata)
mydata[1:10,c('pcode','p102')]
hhdata[1:10,'pcode']
hhdata[1:10,'pop2002']
hhdata[1:10,'pop2003']
individual <- read.table('21741-0001-Data.tsv', header=T, sep='\t')
individual <- read.table('data/21741-0001-Data.tsv', header=T, sep='\t')
household <- read.table('data/21741-0002-Data.tsv', header=T, sep='\t')
individual[1:10,'pcode']
household[1:10,'pcode']
individual[1:10,'p102']
individual$p104
which(individual$p104 != 1)
?delete
unique(househole$pcode)
unique(household$pcode)
unique(individual$pcode)
individual <- individual[individual$p104==1,]
num(unique(individual$pcode))
length(unique(individual$pcode))
length(unique(household$pcode))
for (i in which(individual$p104 != 1)){
household <- household[-household$pcode == individual[i,'pcode'],]
}
length(unique(household$pcode))
individual <- read.table('data/21741-0001-Data.tsv', header=T, sep='\t')
length(unique(individual$pcode))
for (i in which(individual$p104 != 1)){
household <- household[-household$pcode == individual[i,'pcode'],]
}
length(unique(household$pcode))
seed.3d <- array(1,c(2,4,2))
seed.3d[1,1,1] <- 4
seed.3d[1,3,1] <- 10
seed.3d[1,4,2] <- 6
seed.3d
target.V1 <- c(50, 16)
target.V2.V3 <- array(4, dim=c(4,2))
target.V2.V3[1,1] <- 10
target.V2.V3[3,1] <- 22
target.V2.V3[4,2] <- 14
target.V1
target.V2.V3
household
which(individual$p104 != 1)
for(i in which(individual$p104 != 1)) print(i)
individual[20547,'pcode']
household <- read.table('data/21741-0002-Data.tsv', header=T, sep='\t')
household$pcode == individual[20547,'pcode']
household[household$pcode == individual[20547,'pcode'],]
households_tb_deleted <- individual[individual$p104 != 1, 'pcode']
households_tb_deleted
sum(individual$p104 != 1)
individual$p104 != 1
sum(individual$p104!=1)
households_tb_deleted <- individual[individual$p104 != 1, 'pcode']
length(unique(household$pcode))
household = subset(household, !pcode %in%  households_tb_deleted)
length(unique(household$pcode))
individual <- individual[individual$p104==1,]
length(unique(individual$pcode))
summary(individual$pcode)
summary(household$pcode)
individual <- read.table('data/21741-0001-Data.tsv', header=T, sep='\t')
household <- read.table('data/21741-0002-Data.tsv', header=T, sep='\t')
table(individual$code_p)
colnames(individualData)
households_tb_kept <- individual[individual$p104 == 1, 'pcode']
household <- subset(household, pcode %in%  households_tb_kept)
individual <- individual[individual$p104==1,]
dim(individual)
colnames(individual)
count(individual, 'city')
plot(count(individual,'p106'),cex=0.5)
individualData <- individual[,c('pcode','p102','p105','p106','p107','p109','p112','p201')]
householdData <- household[,c('pcode','h401','h501')]
colnames(individualData)
colnames(individualData) <- c('pcode','num_in_hh','sex','age','emp_status','marriage','edu','inc')
colnames(householdData) <- c('pcode','fin_asset','loc_res')
individualData$num_in_hh
table(individualData$sex)
table(individualData$age)
1/5
integer(1、5)
integer(1/5)
integer(5/5)
integer(2/5)
integer(5/5)
integer(6/5)
?integer
as.integer(2.4)
as.integer(5/5)
as.integer(4/5)
as.integer(9/10)
as.integer(0/10)
as.integer(0/10+1)
as.integer(3/10+1)
as.integer(9/10+1)
as.integer(01/10+1)
as.integer(10/10+1)
inRawData$age <- ifelse(inRawData$age>=60, 7, as.integer(inRawData$age/10+1))
inRawData <- individual[,c('pcode','p102','p105','p106','p107','p109','p112','p201')]
hhRawData <- household[,c('pcode','h401','h501')]
colnames(inRawData) <- c('pcode','num_in_hh','sex','age','emp_status','marriage','edu','inc')
colnames(hhRawData) <- c('pcode','fin_asset','loc_res')
inRawData$age <- ifelse(inRawData$age>=60, 7, as.integer(inRawData$age/10+1))
table(inRawData$age)
hist(inRawData$age)
unique(inRawData$emp_status)
pop <- read.csv('~/Downloads/population_data')
pop <- read.table('~/Downloads/population_data',header = F, sep=',')
pop[1:10,]
unique(pop$v6)
unique(pop$V6)
unique(inRawData$emp_status)
?if
?ifelse
?ifelse
?list
emp_raw <- list(1=c(1),2 = c(12),3 = c(4), 4 = c(3,7,8), 5=c(2,6,7,8), 6 = c(11),7 = c(10,13),8 = c(14,0), 9 = c(NA))
list(a = c(1,2,3),v=c(2,3,3))
list(c(1,2,3),c(2,3,3))
emp_raw <- list(c(1),c(12),c(4),c(3,7,8), c(2,6,7,8), c(11), c(10,13), c(14,0), c(NA))
emp_raw
dim(emp_raw)
length(emp_raw)
emp_raw[[1]]
emp_raw[[4]]
emp_raw <- list(c(1),c(12),c(4),c(3,7,8), c(2,6,7,8), c(11), c(10,13), c(14,0), c(NA))
for (i in 1:length(emp_raw)){
ifelse(inRawData$emp_status %in% emp_raw[[i]], i, inRawData$emp_status)
}
unique(inRawData$emp_status)
for (i in 1:length(emp_raw)){
inRawData <- ifelse(inRawData$emp_status %in% emp_raw[[i]], i, inRawData$emp_status)
}
for (i in 1:length(emp_raw)){
inRawData$emp_status <- ifelse(inRawData$emp_status %in% emp_raw[[i]], i, inRawData$emp_status)
}
inRawData$emp_status <- ifelse(inRawData$emp_status %in% emp_raw[[i]], i, inRawData$emp_status)
i
inRawData$emp_status <- ifelse(inRawData$emp_status %in% emp_raw[[i]], i, inRawData$emp_status)
inRawData
inRawData <- individual[,c('pcode','p102','p105','p106','p107','p109','p112','p201')]
hhRawData <- household[,c('pcode','h401','h501')]
colnames(inRawData) <- c('pcode','num_in_hh','sex','age','emp_status','marriage','edu','inc')
colnames(hhRawData) <- c('pcode','fin_asset','loc_res')
inRawData$age <- ifelse(inRawData$age>=60, 7, as.integer(inRawData$age/10+1))
emp_raw <- list(c(1),c(12),c(4),c(3,7,8), c(2,6,7,8), c(11), c(10,13), c(14,0))
for (i in 1:length(emp_raw)){
inRawData$emp_status <- ifelse(inRawData$emp_status %in% emp_raw[[i]], i, inRawData$emp_status)
}
unique(inRawData$emp_status)
which(individualData$emp_status == 2)
which(individualData$emp_status == 12)
12 %in% c(12)
table(individual$p107)
inRawData <- individual[,c('pcode','p102','p105','p106','p107','p109','p112','p201')]
hhRawData <- household[,c('pcode','h401','h501')]
colnames(inRawData) <- c('pcode','num_in_hh','sex','age','emp_status','marriage','edu','inc')
table(inRawData$emp_status)
inRawData$emp_status %in% emp_raw[[3]]
sum(inRawData$emp_status %in% emp_raw[[3]])
for (i in 1:length(emp_raw)) print(i)
