plot(bn.hc,radius = 250,ylim=c(0,700))
plot(bn.hc,radius = 250,ylim=c(0,700),arrow = 40)
plot(bn.hc,radius = 250,ylim=c(0,700),arrow = 20)
plot(bn.hc,radius = 250,ylim=c(0,700),arrow = 30)
plot(bn.hc,radius = 250,ylim=c(0,700),arrow = 40)
graphviz.plot(bn.hc)
?tb
?ts
bn.tb <- tabu(inRawData[,2:8], score='aic')
graphviz.plot(bn.tb)
compare(bn.hc, bn.tb)
?graphviz.compare
graphviz.compare(bn.hc, bn.tb)
par(mfrow=c(1,2))
graphviz.compare(bn.hc, bn.tb)
bn.tb$arcs
bn.tb$learning
fitted.hc <- bn.fit(bn.hc, inRawData[,2:8])
fitted.tb <- bn.fit(bn.tb, inRawData[,2:8])
fitted.hc
bn.fit.dotplot(fitted.hc)
?bn.fit
fitted.hc <- bn.fit(bn.hc, inRawData[,2:8], method = 'mle')
fitted.tb <- bn.fit(bn.tb, inRawData[,2:8], method = 'mle')
bn.fit.dotplot(fitted.hc, xlab='prob',ylab='levels',main='conditional prob')
fitted.hc
simulation0 <- rbn(fitted.tb, 10000,debug=T)
simulation0 <- rbn(fitted.tb, 10000000,debug=T)
simulation0 <- rbn(fitted.tb, 19612368,debug=T)
hist(simulation0$sex)
table(simulation0$sex)
table(simulation0$edu)
?table
plot(table(simulation$du))
plot(table(simulation$edu))
plot(table(simulation0$edu))
par(mfrow=c(1,1))
plot(table(simulation0$edu))
table(simulation0$age)
plot(table(simulation0$age))
plot(table(inRawData$age))
plot(table(inRawData$edu))
plot(table(simulation0$edu))
library(ggplot2)
ggplot(simulation0,aes(x=edu))+geom_histogram()
ggplot(simulation0,aes(x=edu))+geom_histogram(stat=count)
ggplot(simulation0,aes(x=edu))+geom_histogram(stat='count')
df <- read.table(text = "       Input Rtime Rcost Rsolutions  Btime Bcost
1   12-proc.     1    36     614425     40    36
2   15-proc.     1    51     534037     50    51
3    18-proc     5    62    1843820     66    66
4    20-proc     4    68    1645581 104400    73
5 20-proc(l)     4    64    1658509  14400    65
6    21-proc    10    78    3923623 453600    82",header = TRUE,sep = "")
dfm <- melt(df[,c('Input','Rtime','Btime')],id.vars = 1)
?melt
??melt
library(data.table)
dfm <- melt(df[,c('Input','Rtime','Btime')],id.vars = 1)
dfm
?melt
g <- ggplot(simulation0, aex(x=edu))+geom_bar(stat='bin')
g <- ggplot(simulation0, aes(x=edu))+geom_bar(stat='bin')
g
g <- ggplot(simulation0, aes(x=edu))+geom_bar(stat='count')
g
g+scale_fill_brewer(palette = 'dark1')
?scale_fill_brewer
g+scale_fill_brewer(palette = 'Set3')
eduCompare <- rbind(simulation0$edu, inRawData$edu)
eduCompare <- cbind(eduCompare, rep(c(1,2),each=c(nrow(simulation0), nrow(inRawData))))
head(eduCompare)
dim(eduCompare)
eduCompare <- rbind(simulation0$edu, inRawData$edu)
dim(educ)
dim(eduCompare)
dim(simulation0$edu)
?rbind
eduCompare <- cbind(t(simulation0$edu), t(inRawData$edu))
dim(eduCompare)
a <- table(inRawData$edu)
a
dim(a)
t(a)
eduCount0 <- inRawData$edu
eduCount1 <- simulation0$edu
eduCount0 <- table(inRawData$edu)
eduCount1 <- table(simulation0$edu)
cbind(eduCount0,eduCount1)
rbind(eduCount0,eduCount1)
eduCount <- c(eduCount0, eduCount1)
eduCount
a <- cbind(eduCount0,eduCount0)
melt(a,id.var = 1)
a
melt(a,id.var = 2)
a <- cbind(eduCount0,eduCount1)
a
melt(a,id.vars=1)
melt(a,id.vars=2)
tb <- melt(Count, id.vars = 1)
eduGraph <- ggplot(tb,aes(x = Categories))+geom_bar(stat='identity')
tb <- melt(Count, id.vars = 1)
Count <- rbind(eduCount0,eduCount1)
tb <- melt(Count, id.vars = 1)
names(tb)[1:2] <- c('Categories', 'souce')
eduGraph <- ggplot(tb,aes(x = Categories))+geom_bar(stat='identity')
eduGraph
eduGraph <- ggplot(tb,aes(x = Categories,y=value))+geom_bar(stat='identity')
eduGraph
tb
tb <- melt(Count, id.vars = 1)
tb
Count <- cbind(eduCount0,eduCount1)
tb <- melt(Count, id.vars = 1)
tb
names(tb)[1:2] <- c('Categories', 'source')
eduGraph <- ggplot(tb,aes(x = Categories,y=value))+geom_bar(stat='identity')
eduGraph
eduGraph <- ggplot(tb,aes(x = Categories,y=value,fill=source))+geom_bar(stat='identity')
eduGraph
tb
?geom_bar
?table
frequency(inRawData$edu)
table(inRawData$edu)/nrow(inRawData)
eduProb0 <- table(inRawData$edu)/nrow(inRawData)
eduProb1 <- table(simulation0$edu)/nrow(simulation0)
eduProb <- cbind(eduProb0,eduProb1)
tb <- melt(eduProb, id.vars = 1)
names(tb)[1:2] <- c('Categories', 'source')
eduGraph <- ggplot(tb,aes(x = Categories,y=value,fill=source))+geom_bar(stat='identity')
eduGraph
eduGraph <- ggplot(tb,aes(x = Categories,y=value,fill=source))+
geom_bar(stat='identity',position=position_dodge())
eduGraph
eduGraph+scale_x_continuous(labels=c('Never schooled','Elementary','Middle High', 'Junior High','Universtiy', 'Other'))
eduGraph$labels
eduGraph$coordinates
eduGraph+scale_x_continuous(breaks=1:6,labels=c('Never schooled','Elementary','Middle High', 'Junior High','Universtiy', 'Other'))
g <- g+theme(axis.text.x = element_text(angle = 90))
g
plotCompareBarplot(inRawData$edu, simulation0$edu)
plotCompareBarplot <- function(df1, df2){
Sample <- table(df1)/nrow(df1)
Simulation <- table(df2)/nrow(df2)
prob <- cbind(Sample, Simulation)
df <- melt(prob,id.var = 1)
g <- ggplot(df, aes(x=df[,1], y=df[,3], fill=df[,2]))
+geom_bar(stat='identity',position = position_dodge())
+theme(axis.text.x = element_text(angle = 90))
g
}
plotCompareBarplot(inRawData$edu, simulation0$edu)
df1 <- inRawData$edu
df2 <- simulation0$edu
Sample <- table(df1)/nrow(df1)
table(df1)
nrow(df1)
plotCompareBarplot(inRawData$edu, simulation0$edu)
plotCompareBarplot <- function(df1, df2){
Sample <- table(df1)/length(df1)
Simulation <- table(df2)/length(df2)
prob <- cbind(Sample, Simulation)
df <- melt(prob,id.var = 1)
g <- ggplot(df, aes(x=df[,1], y=df[,3], fill=df[,2]))
+geom_bar(stat='identity',position = position_dodge())
+theme(axis.text.x = element_text(angle = 90))
g
}
plotCompareBarplot(inRawData$edu, simulation0$edu)
Sample <- table(df1)/length(df1)
Simulation <- table(df2)/length(df2)
prob <- cbind(Sample, Simulation)
df <- melt(prob,id.var = 1)
df
g <- ggplot(df, aes(x=df[,1], y=df[,3], fill=df[,2]))
+geom_bar(stat='identity',position = position_dodge())
g <- ggplot(df, aes(x=df[,1], y=df[,3], fill=df[,2])) +
geom_bar(stat='identity',position = position_dodge())+
theme(axis.text.x = element_text(angle = 90))
g
plotCompareBarplot <- function(df1, df2){
Sample <- table(df1)/length(df1)
Simulation <- table(df2)/length(df2)
prob <- cbind(Sample, Simulation)
df <- melt(prob,id.var = 1)
names(df) <- c('Categories', 'Probability', 'Data')
g <- ggplot(df, aes(x=df[,1], y=df[,3], fill=df[,2])) +
geom_bar(stat='identity',position = position_dodge())+
theme(axis.text.x = element_text(angle = 90))
g
}
prob
dim(prob)
factor(inRawData$edu)
length(levels(inRawData$edu))
plotCompareBarplot <- function(df1, df2){
Sample <- table(df1)/length(df1)
Simulation <- table(df2)/length(df2)
prob <- cbind(Sample, Simulation)
df <- melt(prob,id.var = 1)
names(df) <- c('Categories', 'Probability', 'Data')
g <- ggplot(df, aes(x=df[,1], y=df[,3], fill=df[,2])) +
geom_bar(stat='identity',position = position_dodge())+
theme(axis.text.x = element_text(angle = 90)) +
scale_x_continuous(breaks=1:length(labs),labels = labs)
g
}
edu_labs <- c('Never', 'Primary','Middle','High','University','Other')
plotCompareBarplot(inRawData$edu, simulation0$edu, labs = edu_labs)
plotCompareBarplot <- function(df1, df2, labs){
Sample <- table(df1)/length(df1)
Simulation <- table(df2)/length(df2)
prob <- cbind(Sample, Simulation)
df <- melt(prob,id.var = 1)
names(df) <- c('Categories', 'Probability', 'Data')
g <- ggplot(df, aes(x=df[,1], y=df[,3], fill=df[,2])) +
geom_bar(stat='identity',position = position_dodge())+
theme(axis.text.x = element_text(angle = 90)) +
scale_x_continuous(breaks=1:length(labs),labels = labs)
g
}
edu_labs <- c('Never', 'Primary','Middle','High','University','Other')
plotCompareBarplot(inRawData$edu, simulation0$edu, labs = edu_labs)
plotCompareBarplot <- function(df1, df2, labs){
Sample <- table(df1)/length(df1)
Simulation <- table(df2)/length(df2)
prob <- cbind(Sample, Simulation)
df <- melt(prob,id.var = 1)
names(df) <- c('Categories', 'Probability', 'Data')
g <- ggplot(df, aes(x=df[,1], y=df[,3], fill=df[,2])) +
geom_bar(stat='identity',position = position_dodge())+
#theme(axis.text.x = element_text(angle = 90)) +
scale_x_continuous(breaks=1:length(labs),labels = labs)
g
}
edu_labs <- c('Never', 'Primary','Middle','High','University','Other')
plotCompareBarplot(inRawData$edu, simulation0$edu, labs = edu_labs)
plotCompareBarplot <- function(df1, df2, labs){
Sample <- table(df1)/length(df1)
Simulation <- table(df2)/length(df2)
prob <- cbind(Sample, Simulation)
df <- melt(prob,id.var = 1)
names(df) <- c('Categories', 'Probability', 'Data')
g <- ggplot(df, aes(x=Categories, y=Data, fill=Probability)) +
geom_bar(stat='identity',position = position_dodge())+
#theme(axis.text.x = element_text(angle = 90)) +
scale_x_continuous(breaks=1:length(labs),labels = labs)
g
}
edu_labs <- c('Never', 'Primary','Middle','High','University','Other')
plotCompareBarplot(inRawData$edu, simulation0$edu, labs = edu_labs)
aa <- read.csv('~/Downloads/ipumsi_00001.csv')
dim(aa)
names(aa)
unique(aa$GEOLEV1)
?count
count(aa$GEOLEV1 == 156011)
count(aa$GEOLEV1)
aa$SERIAL[1:20]
length(unique(aa$SERIAL))
length(unique(aa$SERIAL[aa$GEOLEV1 == 156011]))
aa$persons[1:20]
aa$PERSONS[1:20]
fitted.tb
?atbu
?tabu
bn.tb <- tabu(inRawData[,2:8], score='aic', tabu=100)
proc.time()
ptm <- proc.time()
bn.tb <- tabu(inRawData[,2:8], score='aic', tabu=100)
proc.time()-ptm
bn.tb <- tabu(inRawData[,2:8], score='aic', tabu=100)
proc.time()-ptm
graphviz.plot(bn.hc)
graphviz.plot(bn.tb)
par(mfrow=c(1,2))
ptm <- proc.time()
bn.tb <- tabu(inRawData[,2:8], score='aic', tabu=100)
proc.time()-ptm
graphviz.plot(bn.tb)
par(mfrow=c(1,1))
graphviz.plot(bn.tb)
par(mfrow=c(1,2))
graphviz.compare(bn.hc, bn.tb)
bn.hc <- hc(inRawData[,2:8], score='aic')
graphviz.compare(bn.hc, bn.tb)
bn.hc <- hc(inRawData[,2:8], score='aic')
bn.tb <- tabu(inRawData[,2:8], score='aic', tabu=100)
graphviz.compare(bn.hc, bn.tb)
fitted.tb <- bn.fit(bn.tb, inRawData[,2:8], method = 'mle')
graphviz.plot(bn.tb)
simulation0 <- rbn(fitted.tb, 19612368,debug=T)
ptm <- proc.time()
simulation0 <- rbn(fitted.tb, 19612368,debug=T)
proc.time()-ptm
fitted.tb
fitted.tb$sex
inRawData$sex
fitted.tb$sex
table(inRawData$sex)
table(inRawData$sex)/nrow(inRawData$sex)
table(inRawData$sex)/nrow(inRawData)
fitted.tb$marriage
simulation0[1:20]
simulation0[1:20,]
fitted.tb$emp_status
fitted.tb$age
fitted.tb$rel
fitted.tb$sex
fitted.tb$merriage
fitted.tb$marriage
count(inRawData$marriage)
# household variables
# total financial assets: h401
# location of residence: h501
# current household living standard group in city: h604a
individual <- read.table('data/21741-0001-Data.tsv', header=T, sep='\t')
household <- read.table('data/21741-0002-Data.tsv', header=T, sep='\t')
# individual <- individual[individual$city == '110101']
# select people in city
households_tb_kept <- individual[individual$p104 == 1, 'pcode']
household <- subset(household, pcode %in%  households_tb_kept)
individual <- individual[individual$p104==1 & !is.na(individual$pcode),]
dim(individual)
colnames(individual)
count(individual, 'city')
plot(count(individual,'p106'),cex=0.5)
inRawData <- as.data.frame(individual[,c('pcode','p102','p103','p105','p106','p107','p109','p112','p201')])
#inRawData <- individual[,c('pcode','p105','p106','p107','p109','p112','p201')]
hhRawData <- as.data.frame(household[,c('pcode','h401','h501')])
colnames(inRawData) <- c('pcode','hh_size','rel','sex','age','emp_status','marriage','edu','inc')
colnames(hhRawData) <- c('pcode','fin_asset','loc_res')
# hh_size:
# categories: 1,2,3,4, >5
for (i in unique(inRawData$pcode)){
inRawData[inRawData$pcode == i, 'hh_size'] <- max(inRawData[inRawData$pcode == i,'hh_size'])
}
inRawData$hh_size <- ifelse(inRawData$hh_size >= 5, 5, inRawData$hh_size)
# rel: relationship with the head of the household
# 1: self; 2:spous; 3:child; 4: grandchild; 5: parent; 6: other;
rel_raw <- list(c(1),c(2),c(3,4),c(5), c(6,7), c(8,9,10,11))
rel_ind <- list()
for (i in 1:length(rel_raw)){
rel_ind <- c(rel_ind, list(which(inRawData$rel %in% rel_raw[[i]])))
}
for (i in 1:length(rel_raw)){
inRawData[rel_ind[[i]],'rel'] <- i
}
# sex: male=1, female=2
# age: 0-9 = 1, 10-19 = 2, 20-29 = 3, ... 50-59 = 6, >=60 = 7
# work:
#   1. working or employment: 1;
#   2. student: 12
#   3. retired: 3,7,8
#   4. unemployed: 2,4,5,6,9,10,11,13
#   5. others: 14, 0, missing
inRawData$age <- ifelse(inRawData$age>=60, 7, as.integer(inRawData$age/10+1))
emp_raw <- list(c(1),c(12),c(3,7,8), c(2,4,5,6,9,10,11,13), c(14,0,NA))
emp_ind <- list()
for (i in 1:length(emp_raw)){
emp_ind <- c(emp_ind, list(which(inRawData$emp_status %in% emp_raw[[i]])))
}
for (i in 1:length(emp_raw)){
inRawData[emp_ind[[i]],'emp_status'] <- i
}
# Marriage:
# Not married: 1; Married: 2;
inRawData$marriage <- ifelse(inRawData$marriage == 2, 2, 1)
inRawData <- inRawData[!is.na(inRawData$marriage), ]
edu_raw <- list(c(1),c(2,3),c(4,5),c(6,7),c(8,9),c(0,NA))
edu_ind <- list()
for (i in 1:length(edu_raw)){
edu_ind <- c(edu_ind, list(which(inRawData$edu %in% edu_raw[[i]])))
}
for (i in 1:length(edu_raw)){
inRawData[edu_ind[[i]],'edu'] <- i
}
inRawData$inc[is.na(inRawData$inc)] <- mean(inRawData$inc,na.rm = T)
inRawData$inc <- cut(inRawData$inc, breaks=c(0,5000,10000,15000,20000,30000,max(inRawData$inc,na.rm = T)),labels = 1:6,include.lowest = T)
for (i in 2:8){
inRawData[,i] <- as.factor(inRawData[,i])
}
ptm <- proc.time()
bn.tb <- tabu(inRawData[,2:8], score='aic', tabu=100)
proc.time()-ptm
graphviz.plot(bn.tb)
bn.tb <- tabu(inRawData[,2:8], score='aic', tabu=200)
graphviz.plot(bn.tb)
bn.tb <- tabu(inRawData[,2:8], score='aic', tabu=500)
graphviz.plot(bn.tb)
bn.fit.barchart(fitted.tb$rel)
bn.fit.barchart(fitted.tb$sex)
bn.fit.barchart(fitted.tb$marriage)
unique(inRawData$marriage)
fitted.tb <- bn.fit(bn.tb, inRawData[,2:8], method = 'mle')
bn.fit.barchart(fitted.tb$marriage)
bn.fit.barchart(fitted.tb$marriage)
bn.fit.barchart(fitted.tb$rel)
fitted.tb$rel
?bn.fit.barchart
bn.tb <- tabu(inRawData[,2:8], score='aic', tabu=500)
graphviz.plot(bn.tb)
fitted.tb$sex
fitted.tb$marriage
c(10126430, 9485938) /(10126430+9485938)
fitted.tb$rel
bn.fit.barchart(fitted.tb)
bn.fit.barchart(fitted.tb$rel)
bn.fit.barchart(fitted.tb$hh_size)
fitted.tb$hh_size
fitted.tb$age
bn.fit.barchart(fitted.tb$age)
fitted.tb$emp_status
fitted.tb$edu
ptm <- proc.time()
simulation0 <- rbn(fitted.tb, 19612368,debug=T)
proc.time()-ptm
?proc.time()
ptm <- proc.time()
simulation0 <- rbn(fitted.tb, 19612368,debug=T)
proc.time()-ptm
edu_labs <- c('Never', 'Primary','Middle','High','University','Other')
plotCompareBarplot(inRawData$edu, simulation0$edu, labs = edu_labs)
aaa <- NA
plotCompareBarplot <- function(df1, df2, labs=NA){
Sample <- table(df1)/length(df1)
Simulation <- table(df2)/length(df2)
prob <- cbind(Sample, Simulation)
df <- melt(prob,id.var = 1)
names(df) <- c('Categories', 'Probability', 'Data')
g <- ggplot(df, aes(x=Categories, y=Data, fill=Probability)) +
geom_bar(stat='identity',position = position_dodge())+
#theme(axis.text.x = element_text(angle = 90)) +
if (!is.na(labs)) {
g <- g + scale_x_continuous(breaks=1:length(labs),labels = labs)
}
g
}
plotCompareBarplot(inRawData$age, simulation0$age, labs = age_labs = c("[0,5000)","[5000,10000)","[10000, 15000)","[15000, 20000)", "[20000, 30000)", ">=30000"
))
age_labs = c("[0,5000)","[5000,10000)","[10000, 15000)","[15000, 20000)", "[20000, 30000)", ">=30000")
plotCompareBarplot(inRawData$age, simulation0$age, labs = age_labs
)
df1 <- inRawData$age
df2 <- simulation0$age
Sample <- table(df1)/length(df1)
Simulation <- table(df2)/length(df2)
prob <- cbind(Sample, Simulation)
df <- melt(prob,id.var = 1)
names(df) <- c('Categories', 'Probability', 'Data')
g <- ggplot(df, aes(x=Categories, y=Data, fill=Probability)) +
geom_bar(stat='identity',position = position_dodge())+
#theme(axis.text.x = element_text(angle = 90)) +
if (!is.na(labs)) {
g <- g + scale_x_continuous(breaks=1:length(labs),labels = labs)
}
g <- ggplot(df, aes(x=Categories, y=Data, fill=Probability)) +
geom_bar(stat='identity',position = position_dodge())
g
plotCompareBarplot <- function(df1, df2, labs=NA,title){
Sample <- table(df1)/length(df1)
Simulation <- table(df2)/length(df2)
prob <- cbind(Sample, Simulation)
df <- melt(prob,id.var = 1)
names(df) <- c('Categories', 'Probability', 'Data')
g <- ggplot(df, aes(x=Categories, y=Data, fill=Probability)) +
geom_bar(stat='identity',position = position_dodge(),main = title)
#theme(axis.text.x = element_text(angle = 90)) +
if (!is.na(labs)) {
g <- g + scale_x_continuous(breaks=1:length(labs),labels = labs)
}
g
}
plotCompareBarplot(inRawData$edu, simulation0$edu, labs = edu_labs, title = 'Education')
plotCompareBarplot <- function(df1, df2, labs=NA,title){
Sample <- table(df1)/length(df1)
Simulation <- table(df2)/length(df2)
prob <- cbind(Sample, Simulation)
df <- melt(prob,id.var = 1)
names(df) <- c('Categories', 'Probability', 'Data')
g <- ggplot(df, aes(x=Categories, y=Data, fill=Probability)) +
geom_bar(stat='identity',position = position_dodge(),main = title)+
ggtitle(title)
#theme(axis.text.x = element_text(angle = 90)) +
if (!is.na(labs)) {
g <- g + scale_x_continuous(breaks=1:length(labs),labels = labs)
}
g
}
plotCompareBarplot(inRawData$edu, simulation0$edu, labs = edu_labs, title = 'Education')
age_labs <- c('[0,9]','[10,19]', '[20,29]', '[30,39]', '[40,49]', '[50,59]', '>=60')
plotCompareBarplot(inRawData$age, simulation0$age, labs = age_labs, title = 'Marginal distribution of Age')
plotCompareBarplot(inRawData$edu, simulation0$edu, labs = edu_labs, title = 'Marginal distribution of Education')
plotCompareBarplot <- function(df1, df2, labs=NA,title){
Sample <- table(df1)/length(df1)
Simulation <- table(df2)/length(df2)
prob <- cbind(Sample, Simulation)
df <- melt(prob,id.var = 1)
names(df) <- c('Categories', 'Probability', 'Data')
g <- ggplot(df, aes(x=Categories, y=Data, fill=Probability)) +
geom_bar(stat='identity',position = position_dodge())+
ggtitle(title)
#theme(axis.text.x = element_text(angle = 90)) +
if (!is.na(labs)) {
g <- g + scale_x_continuous(breaks=1:length(labs),labels = labs)
}
g
}
str(simulation0)
plotCompareBarplot(inRawData$hh_size, simulation0$hh_size, title = 'Marginal distribution of Household Size')
